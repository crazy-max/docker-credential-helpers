name: build

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

env:
  RELEASE_OUT: "./release"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      -
        name: Install deps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y dbus-x11 gnome-keyring libsecret-1-dev pass
      -
        name: Test
        run: |
          go test -short -v -coverprofile=./coverage.txt -covermode=atomic ./...
          go tool cover -func=./coverage.txt
        shell: bash
      -
        name: Send to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.txt

  build:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Test
        run: |
          make test
      -
        name: Send to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage/coverage.txt
      -
        name: Build
        run: |
          make release
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-credential-helpers
          path: ${{ env.RELEASE_OUT }}/*
          if-no-files-found: error
#      -
#        name: GitHub Release
#        if: startsWith(github.ref, 'refs/tags/v')
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          draft: true
#          files: ${{ env.RELEASE_OUT }}/*
